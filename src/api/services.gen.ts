// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { $OpenApiTs } from './types.gen';

export class RootService {
    /**
     * @returns GitCommitInfo Ok
     * @throws ApiError
     */
    public static getBackendVersion(): CancelablePromise<$OpenApiTs['/version']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/version'
        });
    }
    
}

export class GraphService {
    /**
     * @returns Domain Ok
     * @throws ApiError
     */
    public static getDomains(): CancelablePromise<$OpenApiTs['/graph/domains']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/domains'
        });
    }
    
    /**
     * @returns GraphLayer Ok
     * @throws ApiError
     */
    public static getLayers(): CancelablePromise<$OpenApiTs['/graph/layers']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/layers'
        });
    }
    
    /**
     * Returns whether the graph parse and import endpoints are enabled, i.e.
     * whether the preconditions for the graph import controller are met.
     * @returns boolean Ok
     * @throws ApiError
     */
    public static canUseGraphImport(): CancelablePromise<$OpenApiTs['/graph/import']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/import'
        });
    }
    
    /**
     * Given a set of input files, get a .zip file containing a set of nodes and a set of edges.
     * Note that this endpoint may take several minutes to complete.
     * @param data The data for the request.
     * @param data.formData
     * @returns string Ok
     * @throws ApiError
     */
    public static parseGraph(data: $OpenApiTs['/graph/import/parse']['post']['req'] = {}): CancelablePromise<$OpenApiTs['/graph/import/parse']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/graph/import/parse',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * Drop the existing database and seed it with the provided set of nodes and edges.
     * Note that this endpoint may take several minutes to complete.
     * @param data The data for the request.
     * @param data.formData
     * @returns void No content
     * @throws ApiError
     */
    public static importGraph(data: $OpenApiTs['/graph/import/import']['post']['req']): CancelablePromise<$OpenApiTs['/graph/import/import']['post']['res'][204]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/graph/import/import',
            formData: data.formData,
            mediaType: 'multipart/form-data'
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.name
     * @returns unknown Ok
     * @throws ApiError
     */
    public static getNodes(data: $OpenApiTs['/graph/nodes']['get']['req'] = {}): CancelablePromise<$OpenApiTs['/graph/nodes']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/nodes',
            query: {
                name: data.name
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.layerDepth
     * @param data.dependencyLength
     * @param data.showSelectedInternalRelations Query relationships that are contained within the selection
     * @param data.showDomainInternalRelations Query relationships that are contained within the selection's domain
     * @param data.showExternalRelations Query relationships that are not contained within the selection's domain
     * @param data.includeUnclassifiedApplications Whether to include applications that existing in the unclassified domain. True by default
     * @param data.showOutgoing Query outgoing relationships from the starting point
     * @param data.showIncoming Query incoming relationships from the starting point
     * @param data.outgoingRangeMin
     * @param data.outgoingRangeMax
     * @param data.incomingRangeMin
     * @param data.incomingRangeMax
     * @param data.selfEdges Return relationships that (after lifting) depend on itself
     * @param data.showRuntimeDependencies
     * @param data.showCompileTimeDependencies
     * @param data.showEntityDependencies
     * @returns GraphWithViolations Ok
     * @throws ApiError
     */
    public static getNode(data: $OpenApiTs['/graph/nodes/{id}']['get']['req']): CancelablePromise<$OpenApiTs['/graph/nodes/{id}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/nodes/{id}',
            path: {
                id: data.id
            },
            query: {
                layerDepth: data.layerDepth,
                dependencyLength: data.dependencyLength,
                showSelectedInternalRelations: data.showSelectedInternalRelations,
                showDomainInternalRelations: data.showDomainInternalRelations,
                showExternalRelations: data.showExternalRelations,
                includeUnclassifiedApplications: data.includeUnclassifiedApplications,
                showOutgoing: data.showOutgoing,
                showIncoming: data.showIncoming,
                outgoingRangeMin: data.outgoingRangeMin,
                outgoingRangeMax: data.outgoingRangeMax,
                incomingRangeMin: data.incomingRangeMin,
                incomingRangeMax: data.incomingRangeMax,
                selfEdges: data.selfEdges,
                showRuntimeDependencies: data.showRuntimeDependencies,
                showCompileTimeDependencies: data.showCompileTimeDependencies,
                showEntityDependencies: data.showEntityDependencies
            }
        });
    }
    
    /**
     * @param data The data for the request.
     * @param data.id
     * @param data.layerDepth
     * @returns Breadcrumb Ok
     * @throws ApiError
     */
    public static getBreadcrumbOptions(data: $OpenApiTs['/graph/nodes/{id}/breadcrumbs']['get']['req']): CancelablePromise<$OpenApiTs['/graph/nodes/{id}/breadcrumbs']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/graph/nodes/{id}/breadcrumbs',
            path: {
                id: data.id
            },
            query: {
                layerDepth: data.layerDepth
            }
        });
    }
    
}